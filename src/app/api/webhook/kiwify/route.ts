import { NextRequest, NextResponse } from 'next/server';
import { supabase } from '../../../../lib/supabase';

// Interface do webhook da Kiwify
interface KiwifyWebhook {
  order_id: string;
  order_status: string;
  customer_email: string;
  customer_name: string;
  product_name: string;
  order_value: number;
  created_at: string;
}

// Gerar c√≥digo de acesso √∫nico
function generateAccessCode(): string {
  const timestamp = Date.now().toString(36);
  const random = Math.random().toString(36).substring(2, 8);
  return `VCUT-${timestamp}-${random}`.toUpperCase();
}

// Enviar email com c√≥digo de acesso
async function sendAccessEmail(email: string, name: string, accessCode: string, planType: string) {
  // Aqui voc√™ pode integrar com Resend ou outro servi√ßo
  // Por enquanto, vamos simular
  console.log(`
    üìß EMAIL ENVIADO PARA: ${email}
    üë§ NOME: ${name}
    üîë C√ìDIGO DE ACESSO: ${accessCode}
    
    Ol√° ${name}!
    
    üéâ Parab√©ns! Sua compra do VCUT PRO foi aprovada!
    
    üîë SEU C√ìDIGO DE ACESSO: ${accessCode}
    
    üöÄ COMO ACESSAR:
    1. Acesse: https://vcut-pro.vercel.app
    2. Digite seu c√≥digo: ${accessCode}
    3. Comece a processar v√≠deos em segundos!
    
    ‚ú® ACESSO VITAL√çCIO INCLUI:
    ‚Ä¢ Processamento ultra-r√°pido (3-8 segundos)
    ‚Ä¢ Formato perfeito para TikTok/Instagram/WhatsApp
    ‚Ä¢ Gera√ß√£o autom√°tica de 10 clips por v√≠deo
    ‚Ä¢ Interface premium profissional
    ‚Ä¢ Processamento ILIMITADO para sempre
    ‚Ä¢ Suporte t√©cnico vital√≠cio
    ‚Ä¢ Todas as atualiza√ß√µes futuras GR√ÅTIS
    
    üéØ RECURSOS ESPECIAIS:
    ‚Ä¢ FPS din√¢mico para m√°xima fluidez
    ‚Ä¢ Configura√ß√µes otimizadas por plataforma
    ‚Ä¢ Timing preciso de renderiza√ß√£o
    ‚Ä¢ Qualidade profissional garantida
    
    üìû SUPORTE: contato@vcutpro.com
    üí¨ WhatsApp: (11) 99999-9999
    
    Aproveite sua ferramenta profissional PARA SEMPRE! üé¨
  `);
}

export async function POST(request: NextRequest) {
  try {
    const body: KiwifyWebhook = await request.json();
    
    // Verificar se √© uma venda aprovada
    if (body.order_status === 'paid' || body.order_status === 'approved') {
      
      // PRODUTO √öNICO - Sempre premium vital√≠cio
      const planType: 'premium' = 'premium';
      
      // Acesso vital√≠cio - sem expira√ß√£o
      const expiresAt = null;
      
      try {
        // Criar usu√°rio no Supabase (chave ser√° gerada automaticamente)
        const { data: user, error: userError } = await supabase
          .from('users')
          .insert({
            email: body.customer_email,
            plan_type: planType,
            expires_at: null, // Acesso vital√≠cio
            is_active: true
          })
          .select()
          .single();

        if (userError) throw userError;

        // Registrar compra
        const { error: purchaseError } = await supabase
          .from('purchases')
          .insert({
            user_id: user.id,
            kiwify_transaction_id: body.order_id,
            amount: body.order_value,
            plan_type: planType,
            status: 'completed',
            webhook_data: body
          });

        if (purchaseError) throw purchaseError;

        // Enviar email com c√≥digo
        await sendAccessEmail(
          body.customer_email,
          body.customer_name,
          user.access_key,
          planType
        );
        
        console.log(`‚úÖ Usu√°rio criado: ${user.email} - Chave: ${user.access_key} - Plano: ${planType}`);
        
        return NextResponse.json({ 
          success: true, 
          message: 'Usu√°rio criado e c√≥digo enviado!',
          plan: planType
        });

      } catch (dbError) {
        console.error('‚ùå Erro no banco de dados:', dbError);
        return NextResponse.json({ 
          success: false, 
          error: 'Erro ao criar usu√°rio' 
        }, { status: 500 });
      }
    }
    
    return NextResponse.json({ 
      success: false, 
      message: 'Pedido n√£o aprovado ainda' 
    });
    
  } catch (error) {
    console.error('‚ùå Erro no webhook Kiwify:', error);
    return NextResponse.json({ 
      success: false, 
      error: 'Erro interno do servidor' 
    }, { status: 500 });
  }
}

// Endpoint para verificar c√≥digo de acesso
export async function GET(request: NextRequest) {
  const { searchParams } = new URL(request.url);
  const code = searchParams.get('code');
  
  if (!code) {
    return NextResponse.json({ valid: false, message: 'C√≥digo n√£o fornecido' });
  }
  
  // Verificar se c√≥digo existe e est√° ativo
  // Por simplicidade, vamos aceitar c√≥digos que come√ßam com VCUT-
  const isValid = code.startsWith('VCUT-') && code.length > 10;
  
  return NextResponse.json({ 
    valid: isValid,
    message: isValid ? 'C√≥digo v√°lido!' : 'C√≥digo inv√°lido'
  });
}
